@page "/"
@using FaceVault.Services
@using FaceVault.Components

<PageTitle>@GetPageTitle()</PageTitle>

<div class="container-fluid py-3">
    <!-- Header with Date Navigation -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h2 mb-1">
                        <span class="oi oi-calendar me-2 text-primary" aria-hidden="true"></span>
                        @GetDisplayTitle()
                    </h1>
                    <p class="text-muted mb-0">@GetSubtitle()</p>
                </div>
                
                <!-- Date Navigation and Filters -->
                <div class="d-flex gap-2">
                    <div class="btn-group" role="group">
                        <button class="btn btn-outline-secondary" @onclick="LoadPreviousDay" title="Previous day">
                            <span class="oi oi-chevron-left" aria-hidden="true"></span>
                        </button>
                        <button class="btn btn-outline-primary" @onclick="LoadToday" title="Today">
                            <span class="oi oi-home" aria-hidden="true"></span>
                            Today
                        </button>
                        <button class="btn btn-outline-secondary" @onclick="LoadNextDay" 
                                disabled="@(currentDate >= DateTime.Today)" title="Next day">
                            <span class="oi oi-chevron-right" aria-hidden="true"></span>
                        </button>
                        <button class="btn btn-outline-secondary" @onclick="RefreshMemories" title="Refresh">
                            <span class="oi oi-reload" aria-hidden="true"></span>
                        </button>
                    </div>
                    
                    <!-- Screenshot Filter -->
                    <button class="btn @(excludeScreenshots ? "btn-success" : "btn-outline-secondary")" 
                            @onclick="ToggleScreenshotFilter" 
                            title="@(excludeScreenshots ? "Showing only real photos (screenshots excluded)" : "Showing all photos including screenshots")">
                        <span class="oi oi-camera-slr" aria-hidden="true"></span>
                        @(excludeScreenshots ? "Photos Only" : "Include Screenshots")
                    </button>
                </div>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <!-- Loading State -->
        <div class="row">
            <div class="col-12 text-center py-5">
                <div class="spinner-border text-primary mb-3" role="status" style="width: 3rem; height: 3rem;">
                    <span class="visually-hidden">Loading memories...</span>
                </div>
                <h4 class="text-muted">Finding your memories...</h4>
                <p class="text-muted">Looking for photos from @currentDate.ToString("MMMM d")</p>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <!-- Error State -->
        <div class="row">
            <div class="col-12">
                <div class="alert alert-danger text-center" role="alert">
                    <span class="oi oi-warning me-2" aria-hidden="true"></span>
                    @errorMessage
                </div>
            </div>
        </div>
    }
    else if (todaysMemories?.HasMemories != true)
    {
        <!-- Empty State -->
        <div class="row">
            <div class="col-12 text-center py-5">
                <div class="mb-4">
                    <span class="oi oi-image display-1 text-muted" aria-hidden="true"></span>
                </div>
                <h3 class="text-muted">No memories found</h3>
                <p class="text-muted mb-4">
                    You don't have any photos from @todaysMemories?.FormattedDate yet.
                    <br>
                    Try importing some photos first!
                </p>
                <a href="/photo-scan" class="btn btn-primary">
                    <span class="oi oi-magnifying-glass me-2" aria-hidden="true"></span>
                    Scan for Photos
                </a>
            </div>
        </div>
    }
    else
    {
        <!-- Memories Display -->
        <div class="row">
            <div class="col-12">
                <!-- Summary -->
                <div class="alert alert-info mb-4" role="alert">
                    <span class="oi oi-info me-2" aria-hidden="true"></span>
                    Found <strong>@todaysMemories.TotalPhotos photos</strong> from @todaysMemories.FormattedDate 
                    across <strong>@todaysMemories.YearGroups.Count years</strong>
                </div>

                @foreach (var yearGroup in todaysMemories.YearGroups)
                {
                    <!-- Year Header -->
                    <div class="mb-4">
                        <div class="d-flex align-items-center mb-3">
                            <h3 class="mb-0 me-3">
                                @if (yearGroup.IsCurrentYear)
                                {
                                    <span class="badge bg-primary fs-5 py-2 px-3">Today</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary fs-5 py-2 px-3">@yearGroup.Year</span>
                                }
                            </h3>
                            <span class="text-muted">@yearGroup.PhotoCount photo@(yearGroup.PhotoCount == 1 ? "" : "s")</span>
                        </div>

                        <!-- Photo Grid -->
                        <div class="row g-2">
                            @foreach (var photo in yearGroup.Photos.Take(12)) // Limit to 12 photos per year for performance
                            {
                                <div class="col-6 col-sm-4 col-md-3 col-lg-2">
                                    <div class="card border-0 shadow-sm photo-card" @onclick="() => OpenImage(photo)">
                                        <div class="photo-container position-relative">
                                            <ImageThumbnail Photo="photo" />
                                            
                                            <!-- Photo overlay with info -->
                                            <div class="photo-overlay">
                                                <div class="d-flex flex-column align-items-center justify-content-center h-100">
                                                    <span class="oi oi-external-link mb-1" aria-hidden="true"></span>
                                                    <small class="text-white">
                                                        @photo.DateTaken?.ToString("HH:mm")
                                                    </small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            
                            @if (yearGroup.PhotoCount > 12)
                            {
                                <div class="col-6 col-sm-4 col-md-3 col-lg-2">
                                    <div class="card border-0 shadow-sm photo-card">
                                        <div class="photo-container position-relative">
                                            <div class="card-img-top photo-placeholder d-flex flex-column align-items-center justify-content-center">
                                                <span class="oi oi-plus display-6 text-muted" aria-hidden="true"></span>
                                                <small class="text-muted mt-2">+@(yearGroup.PhotoCount - 12) more</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

<style>
    .photo-card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        cursor: pointer;
    }

    .photo-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2) !important;
    }

    .photo-container {
        aspect-ratio: 1;
        overflow: hidden;
        border-radius: 0.375rem;
    }

    .photo-thumbnail {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .photo-card:hover .photo-thumbnail {
        transform: scale(1.05);
    }

    .photo-placeholder {
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 0.375rem;
    }

    .photo-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
        color: white;
        padding: 0.5rem;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .photo-card:hover .photo-overlay {
        opacity: 1;
    }

    .btn-group .btn {
        min-width: 2.5rem;
    }

    .display-1 {
        font-size: 4rem;
    }
</style>